[
    {
        "type": "convention",
        "module": "decrypt",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/encrypt-decrypt/decrypt.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "decrypt",
        "obj": "",
        "line": 81,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/encrypt-decrypt/decrypt.py",
        "symbol": "missing-final-newline",
        "message": "Final newline missing",
        "message-id": "C0304"
    },
    {
        "type": "convention",
        "module": "decrypt",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/encrypt-decrypt/decrypt.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "decrypt",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 76,
        "path": "python/encrypt-decrypt/decrypt.py",
        "symbol": "import-error",
        "message": "Unable to import 'cryptography.hazmat.primitives.ciphers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "decrypt",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 64,
        "path": "python/encrypt-decrypt/decrypt.py",
        "symbol": "import-error",
        "message": "Unable to import 'cryptography.hazmat.primitives.kdf.pbkdf2'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "decrypt",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 49,
        "path": "python/encrypt-decrypt/decrypt.py",
        "symbol": "import-error",
        "message": "Unable to import 'cryptography.hazmat.primitives'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "decrypt",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 56,
        "path": "python/encrypt-decrypt/decrypt.py",
        "symbol": "import-error",
        "message": "Unable to import 'cryptography.hazmat.backends'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "decrypt",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 50,
        "path": "python/encrypt-decrypt/decrypt.py",
        "symbol": "import-error",
        "message": "Unable to import 'cryptography.hazmat.primitives'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "decrypt",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": 24,
        "endColumn": 3,
        "path": "python/encrypt-decrypt/decrypt.py",
        "symbol": "pointless-string-statement",
        "message": "String statement has no effect",
        "message-id": "W0105"
    },
    {
        "type": "convention",
        "module": "decrypt",
        "obj": "decrypt",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 11,
        "path": "python/encrypt-decrypt/decrypt.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "decrypt",
        "obj": "main",
        "line": 58,
        "column": 0,
        "endLine": 58,
        "endColumn": 8,
        "path": "python/encrypt-decrypt/decrypt.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "encrypt",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "encrypt",
        "obj": "",
        "line": 86,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "missing-final-newline",
        "message": "Final newline missing",
        "message-id": "C0304"
    },
    {
        "type": "convention",
        "module": "encrypt",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "encrypt",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 76,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "import-error",
        "message": "Unable to import 'cryptography.hazmat.primitives.ciphers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "encrypt",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 64,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "import-error",
        "message": "Unable to import 'cryptography.hazmat.primitives.kdf.pbkdf2'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "encrypt",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 49,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "import-error",
        "message": "Unable to import 'cryptography.hazmat.primitives'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "encrypt",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 56,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "import-error",
        "message": "Unable to import 'cryptography.hazmat.backends'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "encrypt",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 50,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "import-error",
        "message": "Unable to import 'cryptography.hazmat.primitives'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "encrypt",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 25,
        "endColumn": 3,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "pointless-string-statement",
        "message": "String statement has no effect",
        "message-id": "W0105"
    },
    {
        "type": "convention",
        "module": "encrypt",
        "obj": "encrypt",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 11,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "encrypt",
        "obj": "main",
        "line": 63,
        "column": 0,
        "endLine": 63,
        "endColumn": 8,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "encrypt",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 9,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"os\" should be placed before third party imports \"cryptography.hazmat.primitives.ciphers.Cipher\", \"cryptography.hazmat.primitives.kdf.pbkdf2.PBKDF2HMAC\", \"cryptography.hazmat.primitives.hashes\", \"cryptography.hazmat.backends.default_backend\", \"cryptography.hazmat.primitives.padding\"",
        "message-id": "C0411"
    },
    {
        "type": "refactor",
        "module": "encrypt",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==decrypt:[35:45]\n==encrypt:[31:41]\n    kdf = PBKDF2HMAC(\n        algorithm=hashes.SHA256(),\n        length=32,\n        salt=salt,\n        iterations=100000,\n        backend=default_backend()\n    )\n    key = kdf.derive(passphrase.encode())\n\n    # Generate a random initialization vector (IV)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "encrypt",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "python/encrypt-decrypt/encrypt.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==decrypt:[60:68]\n==encrypt:[65:73]\n        sys.exit(1)\n\n    input_file_path = sys.argv[1]\n    output_file_path = sys.argv[2]\n    passphrase = sys.argv[3]\n\n    # Read the input file contents\n    with open(input_file_path, 'rb') as file:",
        "message-id": "R0801"
    }
]
